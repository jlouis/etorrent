%% -*- mode: Erlang; -*-
[{etorrent_core,
  [
   %% The port entry tells etorrent which port it should listen on. It
   %% can currently not be limited to listen on certain interfaces
   %% only. It will instead bind to every available interface present.
   {port, {{port}} },

   %% The port to listen on when retrieving UDP responses from the tracker
   {udp_port, {{udp_port}} },

   %% Use azDHT (DHT used by Vuze).
   {azdht, {{azdht}} },

   %% Use Peer Exchange (ut_pex).
   {pex, {{pex}} },

   %% The dht entry enables the DHT subsystem, it is used to
   %% retrieve information of which peers are available if there
   %% are no trackers available.
   {dht, {{dht}} },

   %% The DHT subsystem will also bind to all interfaces.
   {dht_port, {{dht_port}} },

   %% The DHT subsystem stores its internal state between runs in a state file
   %% The following setting defines the location of this file
   {dht_state, "{{dht_state}}"},

   %% Enable UPnP subsystem, which tries to open port mappings in
   %% UPnP-aware routers for etorrent.
   {use_upnp, {{use_upnp}} },

   %% The directory to watch for .torrent files and the directory to download data into
   {dir, "{{dir}}"},

   %% The directory to download data into. It is optional, if not defined used 'dir' value.
   {download_dir, "{{download_dir}}"},

   %% Interval in seconds to check directory for new .torrent files
   {dirwatch_interval, {{dirwatch_interval}} },

   %% Location of the log file
   {logger_dir, "{{etorrent_logger_dir}}"},

   %% Name of the log file. Etorrent will stamp out simple messages here whenever progress
   %% is made in the system.
   {logger_fname, "etorrent.log"},

   %% Location of the fast resume file. If present this file is used to populate the fast-
   %% resume table, so startup is much faster. Every 5 minutes the file is stamped out,
   %% so an eventual death of the system won't affect too much. It is also written upon
   %% graceful termination.
   %% NOTE: The directory for the fast resume file must exist, or etorrent will crash.
   {fast_resume_file, "{{fast_resume_file}}"},

   %% Limit on the number of peers the system can maximally be connected to
   {max_peers, 200},

   %% The download rate of the system.
   {max_download_rate, {{max_download_rate}} },

   %% The upload rate of the system.
   {max_upload_rate, {{max_upload_rate}} },

   %% Number of upload slots. Either an integer or 'auto'. We recommend 'auto' as this
   %% will calculate a sane number of upload slots from the upload_rate. If this is set
   %% too low, you will not saturate the outbound bandwidth. If set too high, peers will
   %% not like the client as it can only give bad rates to all peers.
   {max_upload_slots, auto},

   %% High and low watermarks for the file system processes. Etorrent will not open more
   %% on-disk files than the limit given here.
   {fs_watermark_high, 128},
   {fs_watermark_low, 100},

   %% Number of optimistic upload slots. If your line is really fast, consider increasing
   %% this a little bit.
   {min_uploads, 2},

   %% The preallocation strategy to use when creating new files. The default is "sparse"
   %% which creates a sparse file on the disk. Some file systems are bad at working with
   %% sparse files, most notably FreeBSDs default file system. The other option here is
   %% "preallocate" which means the system will fill the file up on disk before using it.
   {preallocation_strategy, {{preallocation}} },

   %% Enable the Web user interface in etorrent, on 127.0.0.1:8080
   {webui, {{webui}} },

   %% Enable logging in the webui
   {webui_logger_dir, "{{webui_logger_dir}}"},

   %% The address to bind the webui on. Notice that is has to be given as a tuple for an IP address
   %% and as a string for a domain name.
   {webui_bind_address, {127,0,0,1}},

   %% The port to use for the webui
   {webui_port, 8080},

   %% Enable profiling; do not enable unless you need it
   {profiling, false}
  ]},
 {cascadae,
  [{webui, true},
   {webui_port, 1080}]},
 {azdht,
  [{listen_port, {{azdht_port}}},
   {state_filename, "{{azdht_state}}"}]},
 {lager,
  [{handlers,
    [{lager_console_backend, notice},
     {lager_file_backend,
      [{"log/error.log", error, 10485760, "$D0", 5},
       {"log/console.log", info, 10485760, "$D0", 5},
       {"log/debug.log", debug, 10485760, "$D0", 5}
      ]}
    ]}
  ]},
 {kernel,
         [{start_timer, true}]},
 {sasl,
        [{sasl_error_logger, {file, "{{sasl_error_log}}"}},
         {errlog_type, error}]}
].
